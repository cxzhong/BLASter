name: Build Wheels (cibuildwheel)

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
    tags: [ 'v*' ]

jobs:
  build_wheels:
    name: cibuildwheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, macos-14, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Homebrew OpenMP (macOS)
        if: runner.os == 'macOS'
        run: |
          export HOMEBREW_NO_ANALYTICS=1
          export HOMEBREW_NO_AUTO_UPDATE=1
          brew update || true
          brew install libomp || true

      - name: Resolve Homebrew LLVM (macOS)
        if: runner.os == 'macOS'
        run: |
          set -euxo pipefail
          brew install llvm libomp || true
          LLVM_PREFIX=$(brew --prefix llvm)
          LIBOMP_PREFIX=$(brew --prefix libomp)
          echo "LLVM_PREFIX=$LLVM_PREFIX" >> $GITHUB_ENV
          echo "LIBOMP_PREFIX=$LIBOMP_PREFIX" >> $GITHUB_ENV
          echo "CC=$LLVM_PREFIX/bin/clang" >> $GITHUB_ENV
          echo "CXX=$LLVM_PREFIX/bin/clang++" >> $GITHUB_ENV
          echo "CFLAGS=-I$LIBOMP_PREFIX/include" >> $GITHUB_ENV
          echo "LDFLAGS=-L$LIBOMP_PREFIX/lib" >> $GITHUB_ENV
          echo "PATH=$LLVM_PREFIX/bin:$PATH" >> $GITHUB_ENV

      - name: Build wheels
        uses: pypa/cibuildwheel@v3.1.4
        env:
          # Prefer Homebrew LLVM toolchain on macOS (populated by Resolve step)
          CC: ${{ env.CC }}
          CXX: ${{ env.CXX }}
          CFLAGS: ${{ env.CFLAGS }}
          LDFLAGS: ${{ env.LDFLAGS }}
          PATH: ${{ env.PATH }}
          DYLD_LIBRARY_PATH: ${{ env.LIBOMP_PREFIX }}/lib
          CIBW_BUILD: cp311-* cp312-* cp313-*
          CIBW_ARCHS_LINUX: x86_64
          CIBW_ARCHS_MACOS: native
          CIBW_ARCHS_WINDOWS: AMD64
          CIBW_SKIP: pp* *-musllinux_* *i686 *win32
          CIBW_MANYLINUX_X86_64: manylinux2014
          CIBW_BEFORE_BUILD: >-
            python -m pip install -U pip setuptools wheel &&
            python -m pip install oldest-supported-numpy Cython cysignals
          CIBW_BEFORE_BUILD_MACOS: >-
            python -m pip install -U pip setuptools wheel &&
            python -m pip install oldest-supported-numpy Cython cysignals
          CIBW_ENVIRONMENT: BLASTER_DEBUG=0
          CIBW_ENVIRONMENT_MACOS: |
            # Prefer Homebrew LLVM clang for OpenMP support (absolute)
            CC=${{ env.CC }}
            CXX=${{ env.CXX }}
            CFLAGS=${{ env.CFLAGS }}
            LDFLAGS=${{ env.LDFLAGS }}
            PATH=${{ env.PATH }}
            DYLD_LIBRARY_PATH=${{ env.LIBOMP_PREFIX }}/lib
            MACOSX_DEPLOYMENT_TARGET=11.0
          CIBW_TEST_COMMAND: >-
            python -c "import blaster, numpy as np; print('BLASter', blaster.__version__)"
        with:
          package-dir: .
          output-dir: wheelhouse

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ runner.os }}
          path: wheelhouse/*.whl
          retention-days: 7
